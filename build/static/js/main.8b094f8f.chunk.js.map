{"version":3,"sources":["layout/main/styles.module.scss","components/common/select/styles.module.scss","layout/header/index.tsx","layout/footer/index.tsx","components/Streams/StreamGraph.tsx","hooks/useWindowSize.tsx","components/common/select/index.tsx","components/Streams/StreamList.tsx","views/Stream.tsx","layout/main/index.tsx","layout/index.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Streams/styles.module.scss"],"names":["module","exports","Header","Footer","StreamGraph","chartData","width","useState","newWidth","setWidth","useEffect","cdata","type","id","height","chartType","loader","data","options","chartArea","rootProps","useWindowSize","window","innerHeight","innerWidth","size","setSize","handleResize","addEventListener","removeEventListener","isAllowed","v","Select","value","onChange","mapOptionToLabel","mapOptionToValue","toValue","option","String","e","target","selectedIndex","className","styles","customselect","map","StreamList","start","setStart","stop","setStop","error","setError","periods","setPeriods","setData","diff","setDiff","total","setTotal","tot","totAll","loadData","setTimeout","totalPeriods","Object","keys","times","interval","ranges","date","Date","minutes","setHours","setMinutes","push","toLocaleTimeString","hour","minute","getTimeRanges","handleTimeChange","period","handleRemove","stopPropagation","index","currentTarget","getAttribute","newPeriod","splice","periodArr","time","stream","entries","item","splitStartPeriod","split","startHours","parseInt","startMinutes","splitStopPeriod","stopHours","stopMinutes","findOverlappying","overlapTotal","toMinutes","Number","allPeriods","console","log","l","length","streamObj","i","j","left","right","overlap","leftStart","leftStop","rightStart","rightStop","key","streamStart","replace","parseFloat","streamStop","el","indexOf","withFiltered","parentStart","parentStop","childStart","childStop","differenceTotal","displayStreamTotal","checkTotalStream","toString","container","style","color","parent","child","onClick","startHourMin","stopHourMin","startTime","stopTime","disabled","paddingTop","paddingLeft","fontWeight","letterSpacing","subitem","textTransform","paddingRight","margin","padding","borderRadius","totals","greenbadge","toFixed","orangebadge","Streams","Main","main","Stream","Layout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b094f8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__1CxvR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customselect\":\"styles_customselect__3Pvtq\"};","import React from 'react';\n\nconst Header: React.FC = () => {\n  return <div></div>;\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Footer: React.FC = () => {\n  return <div></div>;\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport Chart from 'react-google-charts';\n\nconst StreamGraph = ({ chartData, width }) => {\n  const [newWidth, setWidth] = useState<string>('');\n  const columns = [\n    { type: 'string', id: 'Stream' },\n    { type: 'date', id: 'Start' },\n    { type: 'date', id: 'End' },\n  ];\n\n  useEffect(() => {\n    let changeWidth = width > 968 ? '68em' : '68em';\n    setWidth(changeWidth);\n  }, [width]);\n\n  let cdata = [columns, ...chartData];\n\n  return (\n    <>\n      {newWidth ? (\n        <Chart\n          width={newWidth}\n          height={'300px'}\n          chartType=\"Timeline\"\n          loader={<div>Loading Chart</div>}\n          data={cdata}\n          // options={\n          //   {\n          //     // showRowNumber: false,\n          //   }\n          // }\n          options={{\n            chartArea: {\n              width: '100%',\n            },\n          }}\n          rootProps={{ 'data-testid': '1' }}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default StreamGraph;\n","import { useEffect, useState } from 'react';\n//import { isBrowser } from '../utils';\n\nfunction useWindowSize() {\n  const [size, setSize] = useState([window.innerHeight, window.innerWidth]);\n  useEffect(() => {\n    const handleResize = () => {\n      setSize([window.innerHeight, window.innerWidth]);\n    };\n    window.addEventListener('resize', handleResize);\n    // Clean up!\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return size;\n}\n\n// function on (obj: Window, ...args: [string, () => void]) {\n//   if (obj && obj.addEventListener) {\n//     obj.addEventListener(...args);\n//   }\n// }\n// function off(obj: Window, ...args: [string, () => void]) {\n//   if (obj && obj.removeEventListener) {\n//     obj.removeEventListener(...args);\n//   }\n// }\n\n// const useWindowSize = (\n//   initialWidth = Infinity,\n//   initialHeight = Infinity\n// ): { width: number; height: number } => {\n//   const [state, setState] = useState({\n//     width: isBrowser ? window.outerWidth : initialWidth,\n//     height: isBrowser ? window.outerHeight : initialHeight,\n//   });\n//   useEffect(() => {\n//     if (isBrowser) {\n//       const handler = () => {\n//         setState({\n//           width: window.outerWidth,\n//           height: window.outerHeight,\n//         });\n//       };\n//       on(window, 'resize', handler);\n//       return () => {\n//         off(window, 'resize', handler);\n//       };\n//     }\n//   }, []);\n//   return state;\n// };\nexport default useWindowSize;\n","//import useOutsideClick from '../../../hooks/useOutsideClick';\nimport React from 'react';\n\nimport styles from './styles.module.scss';\n\ntype Allowed = string | number;\n\ntype BaseProps<Value> = {\n  value: Value;\n  onChange: (newValue: Value) => void;\n  options: readonly Value[];\n  mapOptionToLabel?: (option: Value) => Allowed;\n  mapOptionToValue?: (option: Value) => Allowed;\n};\n\ntype Props<Value> = Value extends Allowed\n  ? BaseProps<Value>\n  : Required<BaseProps<Value>>;\n\nconst isAllowed = (v: any): v is Allowed =>\n  typeof v === 'string' || typeof v === 'number';\n\nfunction Select<Value>({\n  value,\n  onChange,\n  options,\n  mapOptionToLabel,\n  mapOptionToValue,\n}: Props<Value>) {\n  const toLabel = (option: Value): Allowed => {\n    if (mapOptionToLabel) {\n      return mapOptionToLabel(option);\n    }\n    // if our props are provided correctly, this should never be false\n    return isAllowed(option) ? option : String(option);\n  };\n\n  const toValue = (option: Value): Allowed => {\n    if (mapOptionToValue) {\n      return mapOptionToValue(option);\n    }\n    return isAllowed(option) ? option : String(option);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    onChange(options[e.target.selectedIndex]);\n  };\n\n  return (\n    <select\n      value={toValue(value)}\n      onChange={handleChange}\n      className={styles.customselect}\n    >\n      <option value=\"none\">Select</option>\n      {options.map((value) => (\n        <option value={toValue(value)} key={toValue(value)}>\n          {toLabel(value)}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nexport default Select;\n","import React, { useState, useEffect } from 'react';\n\nimport StreamGraph from './StreamGraph';\nimport useWindowSize from '../../hooks/useWindowSize';\n\nimport styles from './styles.module.scss';\nimport Select from '../common/select';\n// export interface FormProps {\n//   onSubmit: React.FormEventHandler;\n//   addTask: string;\n// }\n\nconst StreamList: React.FC = () => {\n  const [width] = useWindowSize();\n  const [start, setStart] = useState<String>('');\n  const [stop, setStop] = useState<String>('');\n  const [error, setError] = useState<Boolean>(false);\n  const [periods, setPeriods] = useState<any>([]);\n  const [data, setData] = useState<any>([]);\n  const [diff, setDiff] = useState<Number>();\n  const [total, setTotal] = useState<Number>();\n\n  let tot = 0;\n  let totAll = 0;\n\n  useEffect(() => {\n    loadData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [periods]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setError(false);\n    }, 3000);\n  }, [error]);\n\n  let totalPeriods = Object.keys(periods);\n\n  const getTimeRanges = (interval: number) => {\n    const ranges = [];\n    const date = new Date();\n\n    for (let minutes = 0; minutes < 24 * 60; minutes = minutes + interval) {\n      date.setHours(0);\n      date.setMinutes(minutes);\n      ranges.push(\n        date.toLocaleTimeString([], {\n          hour: 'numeric',\n          minute: 'numeric',\n        })\n      );\n    }\n\n    return ranges;\n  };\n\n  const times = getTimeRanges(15);\n\n  const handleTimeChange = (type, period) => {\n    type === 'start' ? setStart(period) : setStop(period);\n  };\n\n  const handleRemove = (e) => {\n    e.stopPropagation();\n\n    const index = e.currentTarget.getAttribute('data-index');\n    const newPeriod = [...periods];\n    newPeriod.splice(index, 1);\n\n    setDiff(0);\n    setTotal(0);\n\n    setPeriods(newPeriod);\n  };\n\n  const handleAdd = () => {\n    const startHourMin = start.split(':');\n    const stopHourMin = stop.split(':');\n\n    const startTime = new Date();\n    startTime.setHours(parseInt(startHourMin[0]));\n    startTime.setMinutes(parseInt(startHourMin[1]));\n\n    const stopTime = new Date();\n    stopTime.setHours(parseInt(stopHourMin[0]));\n    stopTime.setMinutes(parseInt(stopHourMin[1]));\n\n    if (startTime > stopTime) {\n      setError(true);\n      return;\n    }\n\n    let stream = `stream${totalPeriods.length + 1}`;\n\n    start &&\n      stop &&\n      setPeriods((periods) => [...periods, { stream, start, stop }]);\n\n    setStart('');\n    setStop('');\n    loadData();\n  };\n\n  let periodArr = periods\n    ? Object.keys(periods).map((time) => {\n        return { stream: time, period: periods[time] };\n      })\n    : null;\n\n  const loadData = () => {\n    let chartData = [];\n\n    Object.entries(periodArr).map(([index, item]) => {\n      let splitStartPeriod = item.period.start.split(':');\n      let startHours = parseInt(splitStartPeriod[0]);\n      let startMinutes = parseInt(splitStartPeriod[1]);\n\n      let splitStopPeriod = item.period.stop.split(':');\n      let stopHours = parseInt(splitStopPeriod[0]);\n      let stopMinutes = parseInt(splitStopPeriod[1]);\n\n      chartData.push([\n        item.period.stream,\n        new Date(0, 0, 0, startHours, startMinutes, 0),\n        new Date(0, 0, 0, stopHours, stopMinutes, 0),\n      ]);\n      setData(chartData);\n      return null;\n    });\n\n    findOverlappying(periods);\n  };\n\n  const totalTime = (value) => {\n    totAll = totAll + value;\n    setTotal(totAll);\n  };\n\n  const overlapTotal = (value) => {\n    tot = tot + value;\n    setDiff(tot);\n  };\n\n  const toMinutes = (time) => {\n    const [hour, minute] = time.split(':');\n    return Number(hour) * 60 + Number(minute);\n  };\n\n  const findOverlappying = (allPeriods) => {\n    console.log('render');\n    const l = allPeriods.length;\n    const streamObj: Object = {};\n\n    let totalStreamTime: Number;\n    let difference: Number;\n\n    for (let i = 0; i < l; i++) {\n      for (let j = 0; j < l; j++) {\n        const left = allPeriods[j];\n        const right = allPeriods[i];\n\n        streamObj[left.stream] = streamObj[left.stream] || {\n          ...left,\n          overlap: [],\n        };\n\n        if (i === j) {\n          continue;\n        }\n\n        const leftStart = toMinutes(left.start);\n        const leftStop = toMinutes(left.stop);\n        const rightStart = toMinutes(right.start);\n        const rightStop = toMinutes(right.stop);\n\n        if (\n          (leftStart > rightStart && leftStart < rightStop) ||\n          (leftStop > rightStart && leftStop < rightStop)\n        ) {\n          streamObj[left.stream].overlap.push(right.stream);\n        }\n      }\n    }\n\n    //console.log(JSON.stringify(streamObj, null, 2));\n    if (streamObj) {\n      Object.keys(streamObj).map((key) => {\n        let streamStart = streamObj[key].start.replace(':', '.');\n        streamStart = parseFloat(streamStart) * 60;\n\n        let streamStop = streamObj[key].stop.replace(':', '.');\n        streamStop = parseFloat(streamStop) * 60;\n\n        totalStreamTime = streamStop - streamStart;\n        totalTime(totalStreamTime);\n\n        console.log(\n          `  ${streamObj[key].stream} :: ${streamStart} - ${streamStop} `\n        );\n\n        streamObj[key].overlap.map((el) => {\n          const index = streamObj[el].overlap.indexOf(key);\n          streamObj[el].overlap.splice(index, 1);\n          return null;\n        });\n\n        return null;\n      });\n\n      Object.keys(streamObj).map((key) => {\n        streamObj[key].overlap.map((el) => {\n          let withFiltered = streamObj;\n\n          let parentStart = withFiltered[key].start.replace(':', '.');\n          parentStart = parseFloat(parentStart) * 60;\n\n          let parentStop = withFiltered[key].stop.replace(':', '.');\n          parentStop = parseFloat(parentStop) * 60;\n\n          let childStart = withFiltered[el].start.replace(':', '.');\n          childStart = parseFloat(childStart) * 60;\n\n          let childStop = withFiltered[el].stop.replace(':', '.');\n          childStop = parseFloat(childStop) * 60;\n\n          if (childStop > parentStop) {\n            difference = parentStop - childStart;\n            overlapTotal(difference);\n          }\n\n          if (childStop < parentStop) {\n            difference = childStop - parentStart;\n            overlapTotal(difference);\n          }\n          return null;\n        });\n        return null;\n      });\n    }\n\n    return streamObj;\n  };\n\n  let differenceTotal: Number = diff ? Number(diff) / 60 : 0;\n  let displayStreamTotal: Number = total\n    ? (Number(total) - Number(diff)) / 60\n    : null;\n\n  let checkTotalStream = Number('displayStreamTotal').toString() === 'NaN';\n\n  console.log(checkTotalStream);\n  return (\n    <>\n      <div className={styles.container}>\n        <div>\n          <h1>Streams</h1>\n          <h2>\n            To add a stream, please select start &amp; end times, then click the{' '}\n            <span style={{ color: '#257aa6' }}>Add</span> button\n          </h2>\n          <form>\n            <div className={styles.parent}>\n              <div className={styles.child}>\n                <label>Start Time: </label>\n                <Select\n                  value={start}\n                  onChange={(value) => handleTimeChange('start', value)}\n                  options={times}\n                />\n              </div>\n              <div className={styles.child}>\n                <label>End Time: </label>\n                <Select\n                  value={stop}\n                  onChange={(value) => handleTimeChange('stop', value)}\n                  options={times}\n                />\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  onClick={handleAdd}\n                  disabled={!periods && true}\n                >\n                  Add\n                </button>\n              </div>\n            </div>\n          </form>\n          {error && (\n            <div\n              style={{\n                paddingTop: '24px',\n                paddingLeft: '4px',\n                fontWeight: '500',\n                color: 'red',\n                letterSpacing: '2px',\n              }}\n            >\n              Please select a later end time\n            </div>\n          )}\n          <div>\n            {periods.length > 0 && (\n              <h3 style={{ paddingLeft: '4px', paddingTop: '10px' }}>Times</h3>\n            )}\n            <ul>\n              {Object.entries(periodArr).map(([index, item]) => (\n                <li data-index={index} key={item.stream}>\n                  <div className={styles.item}>\n                    <div className={styles.subitem}>\n                      <span\n                        style={{\n                          textTransform: 'capitalize',\n                          fontWeight: '500',\n                          paddingRight: '15px',\n                        }}\n                      >\n                        {item.period.stream}:\n                      </span>\n                      <span\n                        style={{\n                          textTransform: 'capitalize',\n                          fontWeight: '400',\n                        }}\n                      >\n                        start\n                      </span>{' '}\n                      <span style={{ letterSpacing: '2px', fontWeight: '600' }}>\n                        {item.period.start}\n                      </span>{' '}\n                      - End{' '}\n                      <span style={{ letterSpacing: '2px', fontWeight: '600' }}>\n                        {item.period.stop}\n                      </span>\n                    </div>\n                    <div>\n                      <button\n                        style={{\n                          margin: '8px',\n                          padding: '0 8px 0 8px',\n                          borderRadius: '100px',\n                        }}\n                        aria-label={`remove todo ${index}`}\n                        data-index={index}\n                        onClick={handleRemove}\n                      >\n                        x\n                      </button>\n                    </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n            {displayStreamTotal\n              ? periods.length > 0 &&\n                checkTotalStream && (\n                  <div>\n                    <div className={styles.totals}>\n                      The total streaming time is :{' '}\n                      {displayStreamTotal ? (\n                        <span className={styles.greenbadge}>\n                          {displayStreamTotal.toFixed(2)}\n                        </span>\n                      ) : null}{' '}\n                      hour/s with{' '}\n                      <span className={styles.orangebadge}>\n                        {differenceTotal.toFixed(2)}\n                      </span>{' '}\n                      hour/s time overlapping time\n                    </div>\n                  </div>\n                )\n              : null}\n\n            {periods.length > 0 ? (\n              <StreamGraph chartData={data} width={width} />\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default StreamList;\n","import React, { ReactElement } from 'react';\n\nimport StreamList from '../components/Streams/StreamList';\n\nconst Streams: React.FC = (): ReactElement => {\n  return (\n    <>\n      <StreamList />\n    </>\n  );\n};\n\nexport default Streams;\n","import React from 'react';\n\nimport styles from './styles.module.scss';\n\nimport Stream from '../../views/Stream';\n\nconst Main: React.FC = () => {\n  return (\n    <>\n      <div className={styles.main}>\n        <Stream />\n      </div>\n    </>\n  );\n};\n\nexport default Main;\n","import React, { Fragment } from 'react';\n\nimport Header from './header';\nimport Footer from './footer';\nimport Main from './main';\n\nconst Layout: React.FC = () => {\n  return (\n    <Fragment>\n      <Header />\n      <Main />\n      <Footer />\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\n\nimport './styles/App.scss';\nimport Layout from './layout';\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <Layout />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__DitTX\",\"parent\":\"styles_parent__16JTn\",\"child\":\"styles_child__3o2bu\",\"item\":\"styles_item__291Jl\",\"subitem\":\"styles_subitem__33RMI\",\"column1\":\"styles_column1__3m8df\",\"column2\":\"styles_column2__1VaBo\",\"section\":\"styles_section__3cw4J\",\"totals\":\"styles_totals__2AyZt\",\"greenbadge\":\"styles_greenbadge__1ago6\",\"orangebadge\":\"styles_orangebadge__2Z5Wz\"};"],"sourceRoot":""}